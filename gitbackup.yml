---
- hosts: localhost
  become: yes
  vars:
    bucket: kmss3check
    latestfiles: false
    gitrepo: true
    token: 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
  tasks:

  - name: Gathering all the repositories
    shell: |
      curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer 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" https://api.github.com/orgs/safestart/repos
    register: git_repo_url

  - name: Listing out the repositories
    debug: msg="{{ (git_repo_url.stdout | from_json) | map(attribute='clone_url') | join(',')  }}"
    register: git_repo_list
    
#  - name: Filtering out repo name
#    set_fact:
#      git_repo_name: "{{ item | regex_search('[^//]+$') | regex_replace('.git', '') }}"
#    loop: "{{ git_repo_url.split(',') }}"
    
  - name: Uploading all files from github repo to {{bucket}} s3 bucket
    shell: |
      git config --global credential.helper cache
      git clone {{item}} 
      aws s3 cp {{ item | regex_search('[^//]+$') | regex_replace('.git', '') }} s3://{{bucket}}/{{ item | regex_search('[^//]+$') | regex_replace('.git', '') }} --exclude ".git/*" --recursive
      rm -rf {{ item | regex_search('[^//]+$') | regex_replace('.git', '') }}      
    loop: "{{ git_repo_list.msg.split(',') }}" 
    args:
      chdir: /tmp
    when: gitrepo
 
  - name: Uploading the latest updated or created files from {{git_repo_name}} github repo to {{bucket}} s3 bucket, since a day
    shell: |
      git config --global credential.helper cache
      git clone {{item}} && cd {{ item | regex_search('[^//]+$') | regex_replace('.git', '') }}
      for filepush in `git log --pretty=format: --name-only --since="1 days ago" --until="1 seconds ago" | sort | uniq | awk 'NF'`
      do
         aws s3 cp $filepush s3://{{bucket}}/$filepush
         git log --pretty="The author of %h was %an, %ar%nCommit message: %s%n" > {{git_repo_name}}_commit_log.txt
         aws s3 cp {{ item | regex_search('[^//]+$') | regex_replace('.git', '') }}_commit_log.txt s3://{{bucket}}/{{ item | regex_search('[^//]+$') | regex_replace('.git', '') }}/{{ item | regex_search('[^//]+$') | regex_replace('.git', '') }}_commit_log.txt
      done
    loop: "{{ git_repo_url.split(',') }}"       
    when: latestfiles
  
#for filedelete in `git log --name-only --since="2 days ago" --until="1 seconds ago" | sort | uniq | awk 'NF' | grep "    Delete " | awk '{print $2}'`
#do
#    aws s3api delete-object --bucket {{bucket}} --key $filedelete
#done

